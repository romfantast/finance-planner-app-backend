{
  "openapi": "3.0.0",
  "info": {
    "title": "Finance-app",
    "description": "Its API for web aplication Finance-app",
    "version": "2.2.2"
  },
  "servers": [
    {
      "url": "https://finance-planner-app-api.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Authorization endpoints"
    },
    {
      "name": "Dynamic",
      "description": "Dynamic endpoints"
    },
    {
      "name": "Transaction",
      "description": "Transaction endpoints"
    },
    {
      "name": "Personal",
      "description": "Personal Plan endpoints"
    },
    {
      "name": "Statistics",
      "description": "Statistics endpoints"
    }
  ],
  "paths": {
    "/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Create new user.",
        "requestBody": {
          "content": {
            "aplication/json": {
              "schema": {
                "$ref": "#/components/schemas/NewUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewUserResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "message": "Email in use"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "LogIn user",
        "requestBody": {
          "content": {
            "aplication/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewUserResponse"
                }
              }
            }
          },
          "500": {
            "description": "User not found or all need to send all fields ",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        }
      }
    },
    "/auth/current": {
      "get": {
        "tags": ["Auth"],
        "summary": "Get current user",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CurrentUserResponse"
                }
              }
            }
          },
          "401": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "tags": ["Auth"],
        "summary": "Logout current user",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "aplication/json": {
                "schema": {
                  "$ref": "#components/schemas/LogoutResponse"
                },
                "example": {
                  "message": "Logout success"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "message": "Not authorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/balance": {
      "patch": {
        "tags": ["Auth"],
        "summary": "Update balance",
        "requestBody": {
          "content": {
            "aplication/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateBalance"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UpdateBalance"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "500": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "message": "balance is required"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dynamic/chart": {
      "get": {
        "tags": ["Dynamic"],
        "summary": "Get information about customers savings for chart",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetChart"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "message": "Not Found!"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dynamic/statistic": {
      "get": {
        "tags": ["Dynamic"],
        "summary": "Get information about customers savings per month for statistic",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetStatisticRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetStatistic"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "message": "Not Found!"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dynamic/flatImage": {
      "patch": {
        "tags": ["Dynamic"],
        "summary": "Add or change image of flat",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UploadImageRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadImageResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "message": "Not Found!"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/category": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Obtaining a list of categories for which creation of transaction records is available.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetListCategories"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/dayLimit": {
      "get": {
        "tags": ["Transaction"],
        "summary": "Daily and monthly spending limit.",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetSpendingLimit"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "message": "Not Found!"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/transaction": {
      "post": {
        "tags": ["Transaction"],
        "summary": "Request to add a transaction",
        "requestBody": {
          "description": "When adding an income transaction, specify the following fields: {''categoryType'': ''income'', ''sum'': 5000}",
          "content": {
            "application/json": {
              "description": "OK",
              "schema": {
                "$ref": "#/components/schemas/PostTransactionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Transaction information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PostTransactionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "message": "Not Found!"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/transaction/{transactionId}": {
      "patch": {
        "tags": ["Transaction"],
        "summary": "Request to change the information of the added transaction.",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string",
            "description": "Transaction id"
          }
        ],
        "requestBody": {
          "description": "You can change the comment and the amount of transactions.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PatchTransactionRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Transaction information.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PatchTransactionResponse"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "message": "Not Found!"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["Transaction"],
        "summary": "Deleting a transaction.",
        "parameters": [
          {
            "in": "path",
            "name": "transactionId",
            "required": true,
            "type": "string",
            "description": "Transaction id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteTransaction"
                }
              }
            }
          },
          "401": {
            "description": "Not authorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequest"
                },
                "example": {
                  "message": "Not Found!"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/personal": {
      "post": {
        "tags": ["Personal"],
        "summary": "Add collection to Mongo DB",
        "requestBody": {
          "content": {
            "aplication/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateNewCollection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewCollectionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestPersonal"
                }
              }
            }
          },
          "500": {
            "description": "Unauthorized or don`t fill the required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnathorisedPersonal"
                },
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["Personal"],
        "summary": "Edit collection",
        "requestBody": {
          "content": {
            "aplication/json": {
              "schema": {
                "$ref": "#/components/schemas/EditCollection"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Edited success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EditCollectionResponse"
                }
              }
            }
          },
          "404": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestPersonal"
                }
              }
            }
          },
          "500": {
            "description": "Unauthorized or don`t fill the required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnathorisedPersonal"
                },
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": ["Personal"],
        "summary": "Get DB of current user ",
        "responses": {
          "201": {
            "description": "Owner`s DB",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OwnersDatabase"
                }
              }
            }
          },
          "404": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestPersonal"
                }
              }
            }
          },
          "500": {
            "description": "Unauthorized or don`t fill the required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnathorisedPersonal"
                },
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/personal/pre": {
      "post": {
        "tags": ["Personal"],
        "summary": "Calculate, when you will have an apartment in: years and month",
        "requestBody": {
          "content": {
            "aplication/json": {
              "schema": {
                "$ref": "#/components/schemas/CalculatingTimer"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "The calculation has taken place",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Calculating"
                }
              }
            }
          },
          "404": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BadRequestPersonal"
                },
                "example": {
                  "message": "Bad request"
                }
              }
            }
          },
          "500": {
            "description": "Unauthorized or don`t fill the required fields",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UnathorisedPersonal"
                },
                "example": {
                  "message": "Unauthorized"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },

    "/statistic/by-expense": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Get user statistics by expenses",
        "parameters": [
          {
            "in": "query",
            "name": "month",
            "required": true,
            "type": "string",
            "description": "The month for which user need to get the expenses data. From 01 to 12"
          },
          {
            "in": "query",
            "name": "year",
            "required": true,
            "type": "string",
            "description": "The year for which user need to get the expenses data. From 2023"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsExpenses"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              }
            }
          }
        }
      }
    },
    "/statistic/by-category": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Get user statistics by categories",
        "parameters": [
          {
            "in": "query",
            "name": "month",
            "required": true,
            "type": "string",
            "description": "The month for which user need to get the expenses data. From 01 to 12"
          },
          {
            "in": "query",
            "name": "year",
            "required": true,
            "type": "string",
            "description": "The year for which user need to get the expenses data. From 2023"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatisticsCategories"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              }
            }
          },
          "503": {
            "description": "Service Unavailable",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceUnavailable"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "BadRequest": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "User not found"
          }
        },
        "description": "Bad Request"
      },
      "InternalServerError": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Internal Server Error..."
          }
        },
        "description": "Internal Server Error"
      },
      "ServiceUnavailable": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Service Unavailable..."
          }
        },
        "description": "Service Unavailable"
      },
      "NewUserRequest": {
        "required": ["email", "name", "password"],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "User's name only words without numbers and symbols",
            "example": "Entony"
          },
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "entonymail@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password length: min 6 max:infinity",
            "format": "password",
            "example": "qwerty12345"
          }
        },
        "description": "New user registration requeest body"
      },
      "LoginUserRequest": {
        "required": ["email", "password"],
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "User's email",
            "format": "email",
            "example": "entonymail@gmail.com"
          },
          "password": {
            "type": "string",
            "description": "User's password length: min 7 max:32",
            "format": "password",
            "example": "qwerty12345"
          }
        },
        "description": "User logIn requeest body"
      },
      "NewUserResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "User's token after login",
            "format": "jwt",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MWIwYjM5ZmZkNDAzOWMyNjljNGI1OSIsImlhdCI6MTY3OTQ5NDczOCwiZXhwIjoxNjc5NTgxMTM4fQ.Wv0c7Snp7BU8vlziJ6sV0CzUHOs1bPUqnTK8LZJSqjI"
          },
          "name": {
            "type": "string",
            "description": "User's name only words without numbers and symbols",
            "example": "Entony"
          },
          "email": {
            "type": "string",
            "description": "User's email with pattern '/^[a-z0-9]+@[a-z]+\n\\.[a-z]{2,3}/'",
            "example": "entonymail@gmail.com"
          },
          "balance": {
            "type": "number",
            "description": "User's initial balance or updated",
            "format": ""
          }
        },
        "description": "User requeest body"
      },
      "CurrentUserResponse": {
        "type": "object",
        "properties": {
          "user": {
            "type": "object",
            "description": "User`s data",
            "properties": {
              "_id": {
                "type": "string",
                "example": "641b0b39ffd4039c269c4b59"
              },
              "name": {
                "type": "string",
                "example": "Entony"
              },
              "password": {
                "type": "string",
                "example": "qwerty12345"
              },
              "email": {
                "type": "string",
                "example": "entonymail@gmail.com"
              },
              "balance": {
                "type": "number",
                "example": "1200"
              },
              "token": {
                "type": "string",
                "format": "jwt",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MWIwYjM5ZmZkNDAzOWMyNjljNGI1OSIsImlhdCI6MTY3OTQ5NjUzNSwiZXhwIjoxNjc5NTgyOTM1fQ.LrXKRdNnjMFf2kKUxry3b7I0zQ8KUelaOgJpU6XpLXo"
              },
              "verify": {
                "type": "boolean",
                "example": false
              },
              "verificationToken": {
                "type": "string",
                "example": "HhOe8ZMLLgmAM5MA3Lxq9"
              },
              "createdAt": {
                "type": "string",
                "example": "2023-01-01T14:05:45.533Z"
              },
              "updatedAt": {
                "type": "string",
                "example": "2023-03-22T20:10:55.449Z"
              }
            }
          }
        },
        "description": "Current user requeest body"
      },
      "LogoutResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Logout success"
          },
          "description": "Success"
        }
      },
      "UpdateBalance": {
        "type": "object",
        "properties": {
          "balance": {
            "type": "number",
            "example": 2100
          }
        },
        "description": "Success"
      },
      "GetChart": {
        "type": "object",
        "properties": {
          "lastYearInfo": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "month": {
                  "type": "string",
                  "example": "January"
                },
                "expenses": {
                  "type": "number",
                  "example": 2100
                },
                "incomes": {
                  "type": "number",
                  "example": 2100
                },
                "acumulated": {
                  "type": "number",
                  "example": 2100
                }
              }
            }
          },
          "timeIsLeft": {
            "type": "object",
            "properties": {
              "year": {
                "type": "number",
                "example": 2
              },
              "month": {
                "type": "number",
                "example": 12
              }
            }
          },
          "acumulatedAsPercentage": {
            "type": "number",
            "example": 28
          },
          "acumulatedMoney": {
            "type": "number",
            "example": 2100
          },
          "acumulatedSqMeters": {
            "type": "number",
            "example": 28
          },
          "leftAcumulatedMoneyToMeter": {
            "type": "number",
            "example": 2000
          }
        },
        "description": "Success"
      },
      "GetStatisticRequest": {
        "type": "object",
        "properties": {
          "month": {
            "type": "number",
            "example": 3
          },
          "year": {
            "type": "number",
            "example": 2023
          }
        }
      },
      "GetStatistic": {
        "type": "object",
        "properties": {
          "incomeSumPerSelectedMonth": {
            "type": "number",
            "example": 28000
          },
          "expenseSumPerSelectedMonth": {
            "type": "number",
            "example": 21000
          },
          "acumulatedSumPerSelectedMonth": {
            "type": "number",
            "example": 7000
          },
          "planMoneyPerMonth": {
            "type": "number",
            "example": 10000
          },
          "percentagePlanPerMonth": {
            "type": "number",
            "example": 20
          }
        },
        "description": "Success"
      },
      "PostTransactionRequest": {
        "required": ["sum", "categoryType"],
        "type": "object",
        "properties": {
          "sum": {
            "type": "number",
            "description": "Transaction amount",
            "example": 500
          },
          "categoryType": {
            "type": "string",
            "description": "Specify the type depending on the transaction type.",
            "example": "expense"
          },
          "category": {
            "type": "string",
            "description": "Cost category.",
            "example": "House"
          },
          "comment": {
            "type": "string",
            "description": "Description of the cost type. It is indicated only when the transaction is for the expenditure of funds.",
            "example": "Kettle"
          }
        },
        "description": "The body of the transaction request."
      },
      "PatchTransactionRequest": {
        "required": ["sum", "categoryType"],
        "type": "object",
        "properties": {
          "sum": {
            "type": "number",
            "description": "Transaction amount",
            "example": 100
          },
          "categoryType": {
            "type": "string",
            "description": "Specify the type depending on the transaction type.",
            "example": "expense"
          },
          "category": {
            "type": "string",
            "description": "Cost category.",
            "example": "House"
          },
          "comment": {
            "type": "string",
            "description": "Description of the cost type. It is indicated only when the transaction is for the expenditure of funds.",
            "example": "Cat food"
          }
        },
        "description": "The body of the transaction request."
      },
      "PostTransactionResponse": {
        "required": ["sum", "categoryType"],
        "type": "object",
        "properties": {
          "date": {
            "type": "date",
            "description": "Transaction date.",
            "example": "2023-03-25T19:53:06.444Z"
          },
          "comment": {
            "type": "string",
            "description": "Description of the cost type. It is indicated only when the transaction is for the expenditure of funds.",
            "example": "Kettle"
          },
          "sum": {
            "type": "number",
            "description": "Transaction amount.",
            "example": 500
          },
          "categoryType": {
            "type": "string",
            "description": "Selected transaction.",
            "example": "expense"
          },
          "category": {
            "type": "string",
            "description": "Cost category.",
            "example": "House"
          },
          "owner": {
            "type": "string",
            "description": "id user.",
            "example": "641b000f26f8a8424c229c5f"
          },
          "_id": {
            "type": "string",
            "description": "id transaction.",
            "example": "641b000f26f8a84285729c5f"
          }
        },
        "description": "The body of complete information about the transaction."
      },
      "PatchTransactionResponse": {
        "required": ["sum", "categoryType"],
        "type": "object",
        "properties": {
          "date": {
            "type": "date",
            "description": "Transaction date.",
            "example": "2023-03-25T19:53:06.444Z"
          },
          "comment": {
            "type": "string",
            "description": "Description of the cost type. It is indicated only when the transaction is for the expenditure of funds.",
            "example": "Cat food"
          },
          "sum": {
            "type": "number",
            "description": "Transaction amount.",
            "example": 100
          },
          "categoryType": {
            "type": "string",
            "description": "Selected transaction.",
            "example": "expense"
          },
          "category": {
            "type": "string",
            "description": "Cost category.",
            "example": "House"
          },
          "owner": {
            "type": "string",
            "description": "id user.",
            "example": "641b000f26f8a8424c229c5f"
          },
          "_id": {
            "type": "string",
            "description": "id transaction.",
            "example": "641b000f26f8a84285729c5f"
          }
        },
        "description": "The body of complete information about the transaction."
      },
      "GetSpendingLimit": {
        "type": "object",
        "properties": {
          "limitDay": {
            "type": "number",
            "example": 548.39
          },
          "limitMonth": {
            "type": "number",
            "example": 17000.0
          }
        },
        "description": "Success"
      },
      "GetListCategories": {
        "type": "array",
        "items": {
          "type": "string",
          "example": "Products, Clothing and footwear, Cafes and restaurants, Beauty and medicine, Health, Transport, House, Other"
        },
        "description": "Success"
      },
      "DeleteTransaction": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "contact deleted"
          }
        }
      },
      "UploadImageRequest": {
        "type": "string",
        "format": "binary",
        "description": "Flat image"
      },
      "UploadImageResponse": {
        "type": "object",
        "properties": {
          "imageURL": {
            "type": "string",
            "example": "http://res.cloudinary.com/scfsdcsd/image/upload/vsgfdfgds/sfcsdcfs.png"
          }
        }
      },
      "CreateNewCollection": {
        "required": [
          "salary",
          "passiveIncome",
          "savings",
          "cost",
          "footage",
          "procent"
        ],
        "type": "object",
        "properties": {
          "salary": {
            "type": "number",
            "description": "Your salaries",
            "example": 40000
          },
          "passiveIncome": {
            "type": "number",
            "description": "Your passive Income",
            "example": 5000
          },
          "savings": {
            "type": "number",
            "description": "Your savings",
            "example": 10000
          },
          "cost": {
            "type": "number",
            "description": "Cost of the apartment",
            "example": 1000000
          },
          "footage": {
            "type": "number",
            "description": "Footage of the apartment in square meters",
            "example": 60
          },

          "procent": {
            "type": "number",
            "description": "Specify the percentage that you would like to accumulate per month from the total amount of income and you will see when you reach the goal",
            "example": 10
          }
        }
      },
      "OwnersDatabase": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "id": {
              "type": "string",
              "description": "Current DB Id"
            },
            "salary": {
              "type": "number",
              "description": "Yours salaries"
            },
            "passiveIncome": {
              "type": "number",
              "description": "Yours passive Income"
            },
            "savings": {
              "type": "number",
              "description": "Your savings"
            },
            "cost": {
              "type": "number",
              "description": "The cost of the apartment"
            },
            "footage": {
              "type": "number",
              "description": "Footage of the apartment in square meters"
            },
            "procent": {
              "type": "number",
              "description": "Specify the percentage that you would like to accumulate per month from the total amount of income and you will see when you reach the goal"
            },
            "owner": {
              "type": "string",
              "description": "Owner`s Id"
            },
            "createdAt": {
              "type": "string",
              "description": "When created"
            },
            "updatedAt": {
              "type": "string",
              "description": "When updated"
            }
          }
        },
        "example": [
          {
            "id": "6421b9fb8c1be9f98e0608dc",
            "salary": 47000,
            "passiveIncome": 6000,
            "savings": 20000,
            "cost": 700000,
            "footage": 45,
            "procent": 8,
            "owner": "6421ae3ead793ceed5cf4061",
            "createdAt": "2023-03-27T15:44:59.486Z",
            "updatedAt": "2023-03-27T16:34:09.195Z"
          },
          {
            "id": "6421c5819c4b6d2010504362",
            "salary": 10500,
            "passiveIncome": 8500,
            "savings": 34000,
            "cost": 850000,
            "footage": 67,
            "procent": 11,
            "owner": "6421ae3ead793ceed5cf4061",
            "createdAt": "2023-03-27T16:34:09.195Z",
            "updatedAt": "2023-03-27T16:34:18.622Z"
          }
        ]
      },
      "CalculatingTimer": {
        "required": [
          "salary",
          "passiveIncome",
          "savings",
          "cost",
          "footage",
          "procent"
        ],
        "type": "object",
        "properties": {
          "salary": {
            "type": "number",
            "description": "Your salaries",
            "example": 40000
          },
          "passiveIncome": {
            "type": "number",
            "description": "Your passive Income",
            "example": 5000
          },
          "savings": {
            "type": "number",
            "description": "Your savings",
            "example": 10000
          },
          "cost": {
            "type": "number",
            "description": "Cost of the apartment",
            "example": 1000000
          },
          "footage": {
            "type": "number",
            "description": "Footage of the apartment in square meters",
            "example": 60
          },

          "procent": {
            "type": "number",
            "description": "Specify the percentage that you would like to accumulate per month from the total amount of income and you will see when you reach the goal",
            "example": 10
          }
        }
      },
      "securitySchemes": {
        "bearerAuth": {
          "type": "http",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      },
      "NewCollectionResponse": {
        "type": "object",
        "properties": {
          "salary": {
            "type": "number",
            "description": "Yours salaries",
            "example": 40000
          },
          "passiveIncome": {
            "type": "number",
            "description": "Yours passive Income",
            "example": 5000
          },
          "savings": {
            "type": "number",
            "description": "Your savings",
            "example": 10000
          },
          "cost": {
            "type": "number",
            "description": "The cost of the apartment",
            "example": 1000000
          },
          "footage": {
            "type": "number",
            "description": "Footage of the apartment in square meters",
            "example": 60
          },

          "procent": {
            "type": "number",
            "description": "Specify the percentage that you would like to accumulate per month from the total amount of income and you will see when you reach the goal",
            "example": 10
          },
          "owner": {
            "type": "string",
            "description": "Owner`s Id",
            "example": "6421ae3ead793ceed5cf4061"
          }
        },
        "description": "New collection was created"
      },
      "EditCollectionResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Current user`s Id",
            "example": "6421b9fb8c1be9f98e0608dc"
          },
          "salary": {
            "type": "number",
            "description": "Yours salaries",
            "example": 40000
          },
          "passiveIncome": {
            "type": "number",
            "description": "Yours passive Income",
            "example": 5000
          },
          "savings": {
            "type": "number",
            "description": "Your savings",
            "example": 10000
          },
          "cost": {
            "type": "number",
            "description": "The cost of the apartment",
            "example": 1000000
          },
          "footage": {
            "type": "number",
            "description": "Footage of the apartment in square meters",
            "example": 60
          },

          "procent": {
            "type": "number",
            "description": "Specify the percentage that you would like to accumulate per month from the total amount of income and you will see when you reach the goal",
            "example": 10
          },
          "owner": {
            "type": "string",
            "description": "Owner`s Id",
            "example": "6421ae3ead793ceed5cf4061"
          },
          "createdAt": {
            "type": "string",
            "description": "When created",
            "example": "2023-03-27T15:44:59.486Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "When updated",
            "example": "2023-03-27T16:50:52.319Z"
          }
        },
        "description": "Collection was updated"
      },
      "Calculating": {
        "type": "object",
        "properties": {
          "years": {
            "type": "number",
            "description": "Years required",
            "example": 2
          },
          "month": {
            "type": "number",
            "description": "Months required",
            "example": 10
          }
        },
        "description": "You will have an apartment in..."
      },
      "EditCollection": {
        "type": "object",
        "properties": {
          "salary": {
            "type": "number",
            "description": "Yours salaries",
            "example": 40000
          }
        }
      },
      "StatisticsExpenses": {
        "type": "object",
        "required": ["month", "year"],
        "properties": {
          "_id": {
            "type": "string",
            "description": "transaction id",
            "example": "641dd9376f93a1a0bdf993db"
          },
          "date": {
            "type": "string",
            "description": "date of transaction",
            "example": "2023-03-24T17:00:00.241Z"
          },
          "comment": {
            "type": "string",
            "description": "description of expense",
            "example": "Gift for DB"
          },
          "sum": {
            "type": "number",
            "description": "sum of expense",
            "example": 100
          },
          "categoryType": {
            "type": "string",
            "description": "expense",
            "example": "expense"
          },
          "category": {
            "type": "string",
            "description": "type of available category expense",
            "example": "House"
          },
          "owner": {
            "type": "string",
            "description": "id of user which spend money",
            "example": "678dd9376f93a1a0bdf99qwe"
          }
        }
      },
      "StatisticsCategories": {
        "type": "object",
        "required": ["month", "year"],
        "properties": {
          "_id": {
            "type": "string",
            "description": "type of available category",
            "example": "house"
          },
          "totalSum": {
            "type": "number",
            "description": "total sum by every category",
            "example": 500
          }
        }
      },
      "BadRequestPersonal": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Bad request"
          }
        },
        "description": "Bad Request"
      },
      "UnathorisedPersonal": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": "Unathorised"
          }
        },
        "description": "Unathorised"
      }
    }
  }
}
